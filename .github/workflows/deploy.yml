name: Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deployToAzure:
        description: 'Deploy to Azure'
        required: true
        type: boolean
        default: false
      pushToAcr:
        description: 'Push to Acr'
        required: true
        type: boolean
        default: false

env:
  ACR_NAME: TaskAppACR
  IMAGE_PREFIX: TaskAppACR.azurecr.io/task-manager

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: pdo_pgsql, sockets

      - name: Install Composer dependencies
        run: rm -f composer.lock; composer require nyholm/psr7:1.8.1 symfony/psr-http-message-bridge:^2.3 spiral/roadrunner:^2.0 --no-scripts; composer install --optimize-autoloader --no-scripts

      - name: Run PHPUnit tests
        id: tests
        run: composer test

      - name: Run PHPStan analysis
        if: success()
        run: composer stan

      - name: Run Coding Standards check
        if: success()
        id: cs-check
        run: composer cs || echo "CS_FAILED=true" >> $GITHUB_ENV

      - name: Fix Coding Standards if failed
        if: success() && env.CS_FAILED == 'true'
        run: composer cs-fix

  deploy-to-azure:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.deployToAzure == 'true')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep file
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ secrets.AZURE_RESOURCE_GROUP }}
          template: ./infra.bicep
          parameters: 'acrName=${{ env.ACR_NAME }} acrUsername=${{ secrets.ACR_USERNAME }} acrPassword=${{ secrets.ACR_PASSWORD }} appImage="${{ env.IMAGE_PREFIX }}-app:${{ github.sha }}" postgresImage=${{ env.IMAGE_PREFIX }}-postgres:${{ github.sha }} redisImage=${{ env.IMAGE_PREFIX }}-redis:${{ github.sha }}'
          additionalArguments: '--only-show-errors'

      - name: Logout from Azure
        run: az logout

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: success() # Only runs if test job succeeds

    services:
        postgres:
            image: postgres:15
            env:
                POSTGRES_USER: user
                POSTGRES_PASSWORD: password
                POSTGRES_DB: task_manager
            ports:
                - 5432:5432
            options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        redis:
            image: redis:6.0
            ports:
                - 6379:6379


    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and tag Docker images
        run: |
          docker compose build
          docker tag task-manager-api-app ${{ env.IMAGE_PREFIX }}-app:${{ github.sha }}
          docker tag postgres:15 ${{ env.IMAGE_PREFIX }}-postgres:${{ github.sha }}
          docker tag redis:6.0 ${{ env.IMAGE_PREFIX }}-redis:${{ github.sha }}

      - name: Log in to Azure Container Registry
        if: github.event_name == 'push' || github.event.inputs.pushToAcr == 'true'
        run: docker login ${{ env.ACR_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}

      - name: Push Docker images to ACR
        if: github.event_name == 'push' || github.event.inputs.pushToAcr == 'true'
        run: |
          docker push ${{ env.IMAGE_PREFIX }}-app:${{ github.sha }}
          docker push ${{ env.IMAGE_PREFIX }}-postgres:${{ github.sha }}
          docker push ${{ env.IMAGE_PREFIX }}-redis:${{ github.sha }}
